name: Release
permissions:
  contents: write
on:
  push:
    tags: '[0-9]+.*'
env:
  RUST_VERSION: 1.74.0
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
  publish-binaries:
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: universal-apple-darwin
            os: macos-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          rustup toolchain install ${RUST_VERSION} --profile minimal --no-self-update
          rustup default ${RUST_VERSION}
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: pofo_adr
          archive: Atari-Portfolio-address-file-reader-$target
          include: CHANGELOG.md,LICENSE.md,README.md
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
  publish-packages:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          sudo apt-get install -y musl-dev musl-tools
          rustup toolchain install ${RUST_VERSION} --profile minimal --no-self-update
          rustup default ${RUST_VERSION}
          rustup target add --toolchain ${RUST_VERSION} x86_64-unknown-linux-musl
      - uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-rpm-registry-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-rpm-build-target-${{ hashFiles('**/Cargo.lock') }}
      - run: |
          cargo install cargo-deb@2.0.4 cargo-generate-rpm
          cargo build --release --target x86_64-unknown-linux-musl
          cargo deb --target x86_64-unknown-linux-musl
          cargo generate-rpm
      - uses: Roang-zero1/github-upload-release-artifacts-action@v3
        with:
          args: "target/generate-rpm/ target/x86_64-unknown-linux-musl/debian/"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
